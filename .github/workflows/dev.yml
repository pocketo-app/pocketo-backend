# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Dev workflow

on:
  push:
    branches: [ "dev" ]
  pull_request:
    branches: [ "dev" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout the repository
      uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'adopt'
    - name: Setup Gradle
      uses: gradle/gradle-build-action@v2.4.0
      with:
        gradle-version: wrapper
    - name: Run Gradle checking tasks
      run: ./gradlew check # Includes checkFormat, test,...
    - name: Build Docker image
      run: ./gradlew dockerImageBuild -PappImage="${DOCKER_USERNAME}/${DOCKER_IMAGE_NAME}:dev-${GITHUB_SHA::7}"
    - name: Log in to Docker registry
      uses: docker/login-action@v2.1.0
      with:
        username: ${{ vars.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }}
    - name: Push Docker image
      run: docker image push "${DOCKER_USERNAME}/${DOCKER_IMAGE_NAME}:dev-${GITHUB_SHA::7}"
  deploy:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: SSH Remote Commands
        uses: appleboy/ssh-action@v0.1.9
        env:
          GITHUB_SHA: ${GITHUB_SHA}
          SERVER_WORKDIR: ${{ secrets.SERVER_WORKDIR }}
          DOCKER_USERNAME: ${{ vars.DOCKER_USERNAME }}
          DOCKER_IMAGE_NAME: ${{ vars.DOCKER_IMAGE_NAME }}
        with:
          host: ${{ vars.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          port: ${{ secrets.SERVER_PORT }}
          envs: GITHUB_SHA, SERVER_WORKDIR, DOCKER_USERNAME, DOCKER_IMAGE_NAME
          script: |
            cd "${SERVER_WORKDIR}"
            bash ./runner.sh "${DOCKER_USERNAME}/${DOCKER_IMAGE_NAME}:dev-${GITHUB_SHA::7}" restart
