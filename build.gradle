plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.4'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'io.spring.javaformat' version '0.0.38'
}

group = 'dev.pocketo'
version = '0.0.1-SNAPSHOT'
description = 'Pocketo API backend'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'org.springframework.boot:spring-boot-starter-mustache'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

bootJar {
	layered {
		enabled = true // Default is true
	}
}

tasks.register('dockerImageBuild', Exec) {
	def imageName = "tonghoangvu/${project.name}:${project.version}"
	def jarFile = bootJar.archiveFileName.get()
	group = 'application'
	description = 'Build Docker image'
	commandLine = [
	        'docker',
			'image',
			'build',
			'-t',
			imageName,
			'--build-arg',
			"JAR_FILE=${jarFile}",
			'.'
	]
	dependsOn = ['bootJar']
}

tasks.register('dockerImagePush', Exec) {
	def imageName = "tonghoangvu/${project.name}:${project.version}"
	group = 'application'
	description = 'Push Docker image'
	commandLine = ['docker', 'image', 'push', imageName]
}

tasks.register('dockerComposeUp', Exec) {
	group = 'application'
	description = 'Run Docker Compose up'
	commandLine = ['docker', 'compose',  '--env-file', './pocketo-config/.env', 'up', '-d']
}

tasks.register('dockerComposeDown', Exec) {
	group = 'application'
	description = 'Run Docker Compose down'
	commandLine = ['docker', 'compose', '--env-file', './pocketo-config/.env', 'down']
}

tasks.register('dockerComposeLogs', Exec) {
	group = 'application'
	description = 'View Docker Compose logs'
	commandLine = ['docker', 'compose', '--env-file', './pocketo-config/.env', 'logs', '-f']
}

// https://fabianlee.org/2022/11/20/gradle-running-more-than-one-command-in-an-exec-task/
tasks.register('dockerComposeRestartApp', Exec) {
	def serviceName = 'app'
	group = 'application'
	description = 'Reload app container in Docker Compose'
	doFirst {
		exec {
			commandLine = ['docker', 'compose', '--env-file', './pocketo-config/.env', 'stop', serviceName]
		}
	}
	commandLine = ['docker', 'compose', '--env-file', './pocketo-config/.env', 'pull', serviceName]
	doLast {
		exec {
			commandLine = ['docker', 'compose', '--env-file', './pocketo-config/.env', 'up', '-d', '--no-deps', serviceName]
		}
	}
}
